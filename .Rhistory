legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,7]))
plot(density(THETA_n[,7]))
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 1), lty = 1)
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1)
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
par(mfrow=c(3,3))
plot(density(THETA_d[,1]), xlim = c(2,6), ylim = c(0, 3), lty = 1)
lines(density(THETA_n[,1]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,2]), xlim = c(100,160), ylim = c(0,0.3), lty = 1)
lines(density(THETA_n[,2]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,3]), xlim = c(68,80), ylim = c(0, 0.6), lty = 1)
lines(density(THETA_n[,3]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,4]), xlim = c(25,36), ylim = c(0, 0.7), lty = 1)
lines(density(THETA_n[,4]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,5]), xlim = c(30,38), ylim = c(0, 1.2), lty = 1)
lines(density(THETA_n[,5]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,6]), xlim = c(0.4, 0.8), ylim = c(0, 25), lty = 1)
lines(density(THETA_n[,6]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1)
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2))
?legend
par(mfrow=c(3,3))
plot(density(THETA_d[,1]), xlim = c(2,6), ylim = c(0, 3), lty = 1, main = "npreg")
lines(density(THETA_n[,1]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,2]), xlim = c(100,160), ylim = c(0,0.3), lty = 1, main = "glu")
lines(density(THETA_n[,2]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,3]), xlim = c(68,80), ylim = c(0, 0.6), lty = 1, main = "bp")
lines(density(THETA_n[,3]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,4]), xlim = c(25,36), ylim = c(0, 0.7), lty = 1, main = "skin")
lines(density(THETA_n[,4]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,5]), xlim = c(30,38), ylim = c(0, 1.2), lty = 1, main = "bmi")
lines(density(THETA_n[,5]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,6]), xlim = c(0.4, 0.8), ylim = c(0, 25), lty = 1, main = "ped")
lines(density(THETA_n[,6]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1, main = "age")
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
par(mfrow=c(3,3))
plot(density(THETA_d[,1]), xlim = c(2,6), ylim = c(0, 3), lty = 1, main = "npreg")
lines(density(THETA_n[,1]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,2]), xlim = c(100,160), ylim = c(0,0.3), lty = 1, main = "glu")
lines(density(THETA_n[,2]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,3]), xlim = c(68,80), ylim = c(0, 0.6), lty = 1, main = "bp")
lines(density(THETA_n[,3]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,4]), xlim = c(25,36), ylim = c(0, 0.7), lty = 1, main = "skin")
lines(density(THETA_n[,4]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,5]), xlim = c(30,38), ylim = c(0, 1.2), lty = 1, main = "bmi")
lines(density(THETA_n[,5]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,6]), xlim = c(0.4, 0.8), ylim = c(0, 25), lty = 1, main = "ped")
lines(density(THETA_n[,6]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1, main = "age")
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
par(mfrow=c(3,3))
plot(density(THETA_d[,1]), xlim = c(2,6), ylim = c(0, 3), lty = 1, main = "npreg")
lines(density(THETA_n[,1]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,2]), xlim = c(100,160), ylim = c(0,0.3), lty = 1, main = "glu")
lines(density(THETA_n[,2]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,3]), xlim = c(68,80), ylim = c(0, 0.6), lty = 1, main = "bp")
lines(density(THETA_n[,3]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,4]), xlim = c(25,36), ylim = c(0, 0.7), lty = 1, main = "skin")
lines(density(THETA_n[,4]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.5)
plot(density(THETA_d[,5]), xlim = c(30,38), ylim = c(0, 1.2), lty = 1, main = "bmi")
lines(density(THETA_n[,5]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,6]), xlim = c(0.4, 0.8), ylim = c(0, 25), lty = 1, main = "ped")
lines(density(THETA_n[,6]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1, main = "age")
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.3)
par(mfrow=c(3,3))
plot(density(THETA_d[,1]), xlim = c(2,6), ylim = c(0, 3), lty = 1, main = "npreg")
lines(density(THETA_n[,1]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,2]), xlim = c(100,160), ylim = c(0,0.3), lty = 1, main = "glu")
lines(density(THETA_n[,2]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,3]), xlim = c(68,80), ylim = c(0, 0.6), lty = 1, main = "bp")
lines(density(THETA_n[,3]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,4]), xlim = c(25,36), ylim = c(0, 0.7), lty = 1, main = "skin")
lines(density(THETA_n[,4]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,5]), xlim = c(30,38), ylim = c(0, 1.2), lty = 1, main = "bmi")
lines(density(THETA_n[,5]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,6]), xlim = c(0.4, 0.8), ylim = c(0, 25), lty = 1, main = "ped")
lines(density(THETA_n[,6]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
plot(density(THETA_d[,7]), xlim = c(27,40), ylim = c(0, 0.8), lty = 1, main = "age")
lines(density(THETA_n[,7]), lty = 2)
legend("topright", legend = c("theta_d","theta_n"), lty = c(1,2), cex = 0.7)
# prob
prob <- NULL
for (i in 1:7){
prob <- c(prob, mean(THETA_d[,i] > THETA_n[,i]))
}
prob
View(azdiabetes)
mean(azdiabetes[azdiabetes[,8] == "No",1])
mean(azdiabetes[azdiabetes[,8] == "Yes",1])
mean(azdiabetes[azdiabetes[,8] == "Yes",2])
mean(azdiabetes[azdiabetes[,8] == "Yes",1])
mean(azdiabetes[azdiabetes[,8] == "No",2])
names(prob) <- colnames(azdiabetes)[1:7]
prob
library(dplyr)
azdiabetes %>% group_by(diabetes) %>% summarise(mean)
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp), mean(skin))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp), mean(skin), mean(bmi))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp), mean(skin), mean(bmi), mean(ped))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp), mean(skin), mean(bmi), mean(ped), mean(age))
azdiabetes %>% group_by(diabetes) %>% summarise(mean(npreg), mean(glu), mean(bp), mean(skin), mean(bmi), mean(ped), mean(age))
pos_sigma_d <- apply(SIGMA_d, 2, mean)
pos_sigma_n <- apply(SIGMA_n, 2, mean)
plot(pos_sigma_d, pos_sigma_n)
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete")
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.1)
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.3)
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.3)
abline(0,1)
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.5, main = "non-diabete SIGMA versus diabete SIGMA")
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.5, main = "non-diabete SIGMA versus diabete SIGMA")
abline(0,1)
pos_sigma_d
pos_sigma_d>1000
pos_sigma_d>800
pos_sigma_d
matrix(pos_sigma_d, nrow = 7, ncol = 7)
pos_sigma_d <- apply(SIGMA_d, 2, mean)
pos_sigma_n <- apply(SIGMA_n, 2, mean)
plot(pos_sigma_d, pos_sigma_n, xlab = "diabete", ylab = "non-diabete", cex = 0.5, main = "non-diabete SIGMA versus diabete SIGMA")
abline(0,1)
agehw <- read.csv("agehw.txt", header = T, sep = "")
agehw <- read.csv("agehw.txt", header = T, sep = "")
# prior
mu0 <- c(0, 0); L0 <- 100000 * diag(1, nrow = 2, ncol = 2)
nu0 <- 3; S0 <- 1000 * diag(1, nrow = 2, ncol = 2)
n <- dim(agehw)[1]; ybar <- apply(agehw, 2, mean)
Sigma <- cov(agehw); THETA <- SIGMA <- NULL
set.seed(1)
S <- 10000
for (s in 1:S){
# theta
Ln <- solve(solve(L0) + n*solve(Sigma))
mun <- Ln %*% (solve(L0) %*% mu0 + n*solve(Sigma) %*% ybar)
theta <- rmvnorm(1, mun, Ln)
# Sigma
Sn <- S0 + (t(agehw) - c(theta)) %*% t(t(agehw) - c(theta))
Sigma <- solve(rwish(nu0+nn, solve(Sn)))
THETA <- rbind(THETA, theta)
SIGMA <- rbind(SIGMA, c(Sigma))
}
agehw <- read.csv("agehw.txt", header = T, sep = "")
# prior
mu0 <- c(0, 0); L0 <- 100000 * diag(1, nrow = 2, ncol = 2)
nu0 <- 3; S0 <- 1000 * diag(1, nrow = 2, ncol = 2)
n <- dim(agehw)[1]; ybar <- apply(agehw, 2, mean)
Sigma <- cov(agehw); THETA <- SIGMA <- NULL
set.seed(1)
S <- 10000
for (s in 1:S){
# theta
Ln <- solve(solve(L0) + n*solve(Sigma))
mun <- Ln %*% (solve(L0) %*% mu0 + n*solve(Sigma) %*% ybar)
theta <- rmvnorm(1, mun, Ln)
# Sigma
Sn <- S0 + (t(agehw) - c(theta)) %*% t(t(agehw) - c(theta))
Sigma <- solve(rwish(nu0+n, solve(Sn)))
THETA <- rbind(THETA, theta)
SIGMA <- rbind(SIGMA, c(Sigma))
}
plot(THETA[,1], THETA[,2])
plot(THETA[,1], THETA[,2], cex = 0.5)
plot(THETA[,1], THETA[,2], cex = 0.5, alpha = 0.1)
plot(THETA[,1], THETA[,2], cex = 0.5, col = rgb(0,0,0,40))
plot(THETA[,1], THETA[,2], cex = 0.5, col = rgb(0,0,0,0.4))
plot(THETA[,1], THETA[,2], cex = 0.5, col = rgb(0,0,0,0.1))
plot(THETA[,1], THETA[,2], cex = 0.5, col = rgb(0,0,0,0.2))
plot(THETA[,1], THETA[,2], cex = 0.5, col = rgb(0,0,0,0.15))
# correlation
Y <- matrix(NA, nrow = S, ncol = 2)
for (s in 1:S){
Y[s,] <- rmvnorm(1, THETA[s,], matrix(SIGMA[s,], 2, 2))
}
# correlation
Y <- matrix(NA, nrow = S, ncol = 2Y)
Y
Y <- rmvnorm(100, THETA[s,], matrix(SIGMA[s,], 2, 2))
dim(Y)
# correlation
corr <- rep(NA, S)
for (s in 1:S){
Y <- rmvnorm(100, THETA[s,], matrix(SIGMA[s,], 2, 2))
corr[s] <- cor(Y[,1], Y[, 2])
}
plot(density(corr))
# CI
CI_h <- quantile(THETA[,1], c(0.025, 0.975))
# CI
CI_h <- quantile(THETA[,1], c(0.025, 0.975))
CI_w <- quantile(THETA[,2], c(0.025, 0.975))
CI_corr <- quantile(corr, c(0.025, 0.975))
CI_h
res <- rbind(CI_h, CI_w, CI_corr)
res
rbind(CI_h, CI_w, CI_corr)
choose(5,)
choose(5,2)
choose(3,2)
choose(4,2)
letters
which(letters == "w")
which(letters == "o")
which(letters == "r")
x <- matrix(c(1,2,3,4),2,2)
x
c(x)
x <- matrix(c(1:9),3,3)
x
c(x)
x <- matrix(c(1:9),3,3, byrow = T)
x
c(x)
#
setwd("/Users/james/Desktop/Lectures/GR5243_Applied_Data_Science/Spring2019-Proj4-grp9")
list.dirs()
list.dirs("/data")
list.dirs("/data/")
list.dirs("./data/")
files <- list.files("./data/")
files <- list.files("./data/ground_truth/")
files
l <- readLines("files[1]")
l <- readLines(paste("./data/ground_truth/", files[1]))
l <- readLines(paste("./data/ground_truth/", files[1], sep = ""))
l
strsplit(l, " ")
paste(strsplit(l, " "), collapse = " ")
paste(strsplit(l, " "), collapse = ", ")
?grep
grep("group1*", files)
grep("group1", files)
grep("group2", files)
grep("group3", files)
grep("group4", files)
paste("group", 1)
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
}
current_txt
length(current_group)
length(current_txt)
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
}
current_txt
# setwd("/Users/james/Desktop/Lectures/GR5243_Applied_Data_Science/Spring2019-Proj4-grp9")
library(tm)
library(tidytext)
library(tidyverse)
install.packages("tm")
install.packages("tidytext")
# setwd("/Users/james/Desktop/Lectures/GR5243_Applied_Data_Science/Spring2019-Proj4-grp9")
library(tm)
library(tidytext)
library(tidyverse)
group <- 1
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_ground_truth_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
View(dict)
View(dict)
View(dict)
duplicated(dict)
dict <- dict[!duplicated(dict)]
dict <- dict[!duplicated(dict),]
duplicated(dict)
sum(duplicated(dict))
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),]
write.csv(dict, paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),]
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
View(dict)
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),] %>%
filter(length(dictionary) >= 1)
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
View(dict)
dict %>% filter(length(dictionary))
dict %>% filter(length(dictionary) >= 1)
dict %>% filter(nchar(dictionary) >= 1)
dict[1,]
nchar(dict[1,])
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),] %>%
filter(length(dictionary) >= 2)
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
View(dict)
dict[1,]
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),] %>%
filter(nchar(dictionary) >= 2)
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
View(dict)
View(dict)
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("./data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),] %>%
filter(nchar(dictionary) >= 1)
write.csv(dict, file = paste("./output/dict/dict_", current_group, ".csv", sep = ""))
}
View(dict)
library(tm)
library(tidytext)
library(tidyverse)
# create directionaries
files <- list.files("../data/ground_truth/")
for (group in c(1,2,3,4,5)){
current_group <- paste("group", group, sep = "")
current_index <- grep(current_group, files)
current_txt <- NULL
for (i in current_index){
current_txt <- c(current_txt, readLines(paste("../data/ground_truth/", files[i], sep = "")))
}
current_txt = gsub("..."," ",current_txt,fixed = TRUE)
current_txt = gsub("\"","", current_txt,fixed=TRUE)
corpus <- VCorpus(VectorSource(current_txt))%>%
tm_map(content_transformer(tolower))%>%
tm_map(removePunctuation)%>%
tm_map(removeNumbers)%>%
tm_map(removeWords, character(0))%>%
tm_map(stripWhitespace)
dict <- tidy(corpus) %>%
select(text) %>%
unnest_tokens(dictionary, text)
dict <- dict[!duplicated(dict),] %>%
filter(nchar(dictionary) >= 1)
write.csv(dict, file = paste("../output/dict/dict_", current_group, ".csv", sep = ""))
}
